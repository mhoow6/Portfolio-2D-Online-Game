syntax = "proto3";

package Protocol;
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Google.Protobuf.Protocol";

// Input Packet Name ex. C_MOVE, S_MOVE
enum MsgId
{
	C_SPAWN = 0;
	S_SPAWN = 1;
    C_ENTER_GAME = 2;
    S_ENTER_GAME = 3;
    C_LEAVE_GAME = 4;
    S_LEAVE_GAME = 5;
    C_MOVE = 6;
    S_MOVE = 7;
    C_ATTACK = 8;
    S_ATTACK = 9;
    S_DEAD = 10;
    C_SYNC = 11;
    S_SYNC = 12;
    C_CREATE_ROOM = 13;
    S_CREATE_ROOM = 14;
    S_SHOW_ROOM = 15;
}

enum ObjectCode
{
    Unvaild = 0;
	ZeldaArcher = 1;
    ZeldaMonster = 11;
    Arrow = 21;
    DeadEffect = 31;
    Barehand = 101;
    Bow = 102;
}

enum ObjectType
{
    OT_Player = 0;
    OT_Monster = 1;
    OT_Projectile = 2;
    OT_Effect = 3;
    OT_None = -1;
}

enum MapId
{
    DUNGEON = 0;
}

enum MoveDir
{
    UP = 0;
    DOWN = 1;
    LEFT = 2;
    RIGHT = 3;
    STAY = 4;
}

enum State
{
    IDLE = 0;
    MOVING = 1;
    ATTACK = 2;
    SKILL = 3;
    DEAD = 4;
}

// Packet Structure Design like clas
// ps. repeated int32 = List<int>
message C_Spawn
{
    SpawnInfo spawnInfo = 1;
}

message S_Spawn
{
    repeated ObjectInfo objects = 1;
}

message C_EnterGame
{
    RoomInfo roomInfo = 1;
}

message S_EnterGame
{
    ObjectInfo player = 1;
}

message C_LeaveGame
{
    int32 objectId = 1;
}

message S_LeaveGame
{
    int32 objectId = 1;
}

message C_Move
{
    ObjectInfo objectInfo = 1;
}

message S_Move
{
    repeated ObjectInfo objects = 1;
}

message C_Attack
{
    ObjectInfo attackerInfo = 1;
}

message S_Attack
{
    ObjectInfo targetInfo = 1;
    ObjectInfo attackerInfo = 2;
    int32 damage = 3;
}

message S_Dead
{
    int32 objectId = 1;
}

message C_Sync
{
    ObjectInfo objectInfo = 1;
}

message S_Sync
{
    ObjectInfo objectInfo = 1;
}

message C_CreateRoom
{
    int32 mapId = 1;
}

message S_CreateRoom
{
    RoomInfo roomInfo = 1;
}

message S_ShowRoom
{
    repeated RoomInfo rooms = 1;
    repeated int32 deletedRooms = 2;
}

message ObjectInfo
{
    int32 objectId = 1;
    int32 spawnerId = 2;
    int32 roomId = 3;
    int32 objectCode = 4;
    MoveDir moveDir = 5;
    State state = 6;
    StatInfo stat = 7;
    Vector2 position = 8;
}

message SpawnInfo
{
    int32 spawnerId = 1;
    int32 roomId = 2;
    int32 objectCode = 3;
}

message StatInfo
{
    int32 originHp = 1;
    int32 hp = 2;
    int32 movespeed = 3;
    int32 weaponId = 4;
}

message RoomInfo
{
    int32 roomId = 1;
    int32 mapId = 2;
    int32 players = 3;
}

message Vector2
{
    int32 x = 1;
    int32 y = 2;
}